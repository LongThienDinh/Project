{"ast":null,"code":"var _jsxFileName = \"/Users/samaryu/Desktop/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [items, setItems] = React.useState([]);\n  React.useEffect(() => {\n    fetch(\"https://api.tcgdex.net/v2/en/sets\").then(res => res.json()).then(json => {\n      setItems(json);\n      setIsDataLoaded(true);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" All Pokemon trading card game official play sets:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this), items.map(item => /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Set's name: \", item.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), \" Total cards annouced: \", item.cardCount.total, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), \" Offical cards released: \", item.cardCount.official]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }, this);\n};\n_s(App, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","App","_s","items","setItems","useState","useEffect","fetch","then","res","json","setIsDataLoaded","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","name","cardCount","total","official","id","_c","$RefreshReg$"],"sources":["/Users/samaryu/Desktop/my-app/src/App.js"],"sourcesContent":["import React from \"react\";\n\nconst App = () => {\n  const [items, setItems] = React.useState([]);\n  React.useEffect(() => {\n    fetch(\"https://api.tcgdex.net/v2/en/sets\").then((res) => res.json())\n    .then((json) => {\n      setItems(json);\n      setIsDataLoaded(true);\n    });\n}, []);\n\nreturn (\n  <div className=\"App\">\n    <h1> All Pokemon trading card game official play sets:</h1>\n    {items.map((item) => (\n      <ul key={item.id}>\n        <li>\n          Set's name: {item.name}\n          <br /> Total cards annouced: {item.cardCount.total}\n          <br /> Offical cards released: {item.cardCount.official}\n        </li>\n      </ul>\n    ))}\n  </div>\n);\n};\n\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,KAAK,CAACO,QAAQ,CAAC,EAAE,CAAC;EAC5CP,KAAK,CAACQ,SAAS,CAAC,MAAM;IACpBC,KAAK,CAAC,mCAAmC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACnEF,IAAI,CAAEE,IAAI,IAAK;MACdN,QAAQ,CAACM,IAAI,CAAC;MACdC,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBb,OAAA;MAAAa,QAAA,EAAI;IAAkD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC1Dd,KAAK,CAACe,GAAG,CAAEC,IAAI,iBACdnB,OAAA;MAAAa,QAAA,eACEb,OAAA;QAAAa,QAAA,GAAI,cACU,EAACM,IAAI,CAACC,IAAI,eACtBpB,OAAA;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,2BAAuB,EAACE,IAAI,CAACE,SAAS,CAACC,KAAK,eAClDtB,OAAA;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,6BAAyB,EAACE,IAAI,CAACE,SAAS,CAACE,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD;IAAC,GALEE,IAAI,CAACK,EAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMZ,CACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAER,CAAC;AAACf,EAAA,CAxBID,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AA2BT,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}